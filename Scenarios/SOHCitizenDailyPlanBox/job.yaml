# Need to be fixed, cause by invalid prefix and model configuration 
# of the 'CONFIG' environment variable, specified here!!!!!

apiVersion: batch/v1
kind: Job
metadata:
  name: soh-h3-aa-10000c6
spec:
  template:
    spec:
      imagePullSecrets:
        - name: application-deploy-token
      nodeName: node-02.icc.informatik.haw-hamburg.de
      containers:
        - name: soh-evaluation-postgres
          image: git.haw-hamburg.de:5005/mars/life/soh-evaluation:latest
          env:
            - name: CONFIG
              value: '
            {
              "globals": {
               "deltaT": 1,
               "steps": 86400,
               "startPoint": "2020-01-01T00:00:00",
               "endPoint": "2020-01-02T00:00:00",
               "deltaTUnit": 3,
               "console": false,
               "output": "postgres",
               "npgSqlOptions": {
                 "host": "postgresdb",
                 "user": "mars",
                 "password": "sram2020",
                 "databaseName": "soh-h3-aa-10000c"
               }
             },
              "agents": [
                {
                  "count": 10000,
                  "file": "res/agent_inits/CitizenInit10k.csv",
                  "options": {
                    "csvSeparator": ";"
                  },
                  "individual": [
                    {
                      "value": true,
                      "name": "CanCycle",
                      "parameter": "CanCycle"
                    },
                    {
                     "value": 0.326,
                     "name": "CanDriveWithProbability",
                     "parameter": "CanDriveWithProbability"
                    }
                  ],
                  "outputFilter": [
                    {
                      "operator": 0,
                      "values": [
                        true
                      ],
                      "name": "StoreTickResult",
                      "parameter": "StoreTickResult"
                    }
                  ],
                  "name": "Citizen"
                }
              ],
              "layers": [
                {
                  "file": "res/traffic_lights/traffic_lights_altona.zip",
                  "options": {},
                  "individual": [],
                  "outputFilter": [],
                  "name": "TrafficLightLayer"
                },
                {
                  "file": "res/vector_data/Buildings_Altona_altstadt.geojson",
                  "options": {},
                  "individual": [],
                  "outputFilter": [],
                  "name": "GisVectorBuildingLayer"
                },
                {
                  "file": "res/vector_data/Landuse_Altona_altstadt.geojson",
                  "options": {},
                  "individual": [],
                  "outputFilter": [],
                  "name": "GisVectorLanduseLayer"
                },
                {
                  "file": "res/vector_data/POIS_Altona_altstadt.geojson",
                  "options": {},
                  "individual": [],
                  "outputFilter": [],
                  "name": "GisVectorPoiLayer"
                },
                {
                  "file": "res/graphs/altona_altstadt_drive_graph.graphml",
                  "options": {},
                  "individual": [],
                  "outputFilter": [],
                  "name": "CarLayer"
                },
                {
                  "file": "res/vector_data/Parking_Altona_altstadt.geojson",
                  "options": {},
                  "individual": [],
                  "outputFilter": [],
                  "name": "CarParkingLayer"
                },
                {
                  "file": "res/vector_data/Bicycle_Rental_Altona_altstadt.geojson",
                  "options": {},
                  "individual": [],
                  "outputFilter": [],
                  "name": "BicycleParkingLayer"
                },
                {
                  "file": "res/graphs/altona_altstadt_walk_graph.graphml",
                  "options": {},
                  "individual": [],
                  "outputFilter": [],   
                  "name": "CitizenLayer"
                }
              ],
              "execution": {
                "nodeNumber": 0
              },
              "id": "h1-1"
            }
            '
      restartPolicy: Never
  backoffLimit: 0
  ttlSecondsAfterFinished: 864000